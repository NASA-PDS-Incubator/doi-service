name: dev build release

on:
  push:
      branches:
        - master
      paths-ignore:
        - 'CHANGELOG.md'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 sdap_ingest_manager --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 sdap_ingest_manager --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Deploy locally
      run: |
        pip install .
    - name: Update default configuration
      run: |
        import sys
        import os
        from pathlib import Path
        conf_dir = os.path.join(sys.prefix, "pds_doi_core")
        Path(conf_dir).mkdir(parents=True, exist_ok=True)
        conf_file = os.path.join(conf_dir, "conf.ini")
        print(f"Create config file for unit test {conf_file}")
        with open(conf_file, "w") as f:
            f.write("[OSTI]\n")
            f.write("user = {}\n".format("${{secrets.osti_login}}"))
            f.write("password = {}\n".format("${{secrets.osti_password}}"))
      shell: python
    - name: Unit Tests
      run: |
        python setup.py test
    - name: Create the package
      run: |
        pip install setuptools wheel
        rm -f dist/*
        python setup.py sdist bdist_wheel
    - name: Publish new snapshot release
      run: |
        pip install pds-github-util
        python-snapshot-release --token ${{ secrets.GITHUB_TOKEN }}
    - name: Create changelog
      run: |
        sudo gem install github_changelog_generator
        github_changelog_generator --user NASA-PDS-Incubator --project pds-doi-service  --token ${{ secrets.GITHUB_TOKEN }} --configure-sections '{"improvements":{"prefix":"**Improvements:**","labels":["enhancement"]},"defects":{"prefix":"**Defects:**","labels":["bug"]},"deprecations":{"prefix":"**Deprecations:**","labels":["deprecation"]}}' --no-pull-requests
    - name: Commit CHANGELOG.md file
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add CHANGELOG.md
        git commit -m "update changelog on master push" --allow-empty
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        # personal token of an admin has to be in the github secrets section
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: gh-pages
